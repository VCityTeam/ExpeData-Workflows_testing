version: "3.3"

services:
  geoserver:
    image: kartoza/geoserver:2.18.0
    environment:
      - SAMPLE_DATA=true
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}

    ports: 
      - ${GEOSERVER_PORT}:8080


  geoserver-setup:
    build: 
      context: ./server-setup-context
      args:
        GEOSERVER_DATA_IMPORT_DIR: ${GEOSERVER_DATA_IMPORT_DIR}
    environment:
      - WORKSPACE=${GEOSERVER_WORKSPACE}
      - MAX_CONNECTION_ATTEMPTS=${GEOSERVER_MAX_CONNECTION_ATTEMPTS}
      - TIME_CONNECTION_ATTEMPTS=${GEOSERVER_TIME_CONNECTION_ATTEMPTS}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}

  postgres:
    restart: unless-stopped
    image: postgres:10
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432

  enhanced_city_api:
    build: API_Enhanced_city-context/
    container_name: enhanced_city_api
    ports:
      - 8997:5000
    volumes:
      - .:/api
    depends_on:
      - postgres

  3dtiles-server:
    build: 
      context: ./3dtiles-server-context
      args:
        TILESET_SOURCE: ${TILESET_SOURCE}
    ports: 
      - 8003:8003

  udviz:
    build: 
      context: ./ud-viz-context
      args:
        GEOSERVER_FQDN: ${GEOSERVER_FQDN}
        GEOSERVER_PORT: ${GEOSERVER_PORT}
        TILESET_CUSTOM_SERVER: ${TILESET_CUSTOM_SERVER}
    command: node ./index.js ../DatAgora_PartDieu ${UD_VIZ_PORT}
    ports:
      - ${UD_VIZ_PORT}:${UD_VIZ_PORT}
