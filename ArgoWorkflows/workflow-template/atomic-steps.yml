apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: workflow-template-atomic-steps-template
spec:
  entrypoint: collect-lyon-data-template
  templates:
  - name: collect-lyon-data-template
    inputs:
      parameters:
      - name: borough
      - name: pattern
      - name: results_dir
      - name: vintage
      - name: persistedVolume
    container:
      image: vcity/collect_lyon_data
      imagePullPolicy: Never
      args: ["python3", "entrypoint.py",
            "--borough",     "{{inputs.parameters.borough}}",
            "--pattern",     "{{inputs.parameters.pattern}}",
            "--results_dir", "{{inputs.parameters.results_dir}}",
            "--vintage",     "{{inputs.parameters.vintage}}",
            "--volume",      "{{inputs.parameters.persistedVolume}}"]
      volumeMounts:
        - name: workdir
          mountPath: "{{inputs.parameters.persistedVolume}}"
    outputs:
      parameters:
      - name: resulting-filenames
        valueFrom:
          path: "{{inputs.parameters.persistedVolume}}/{{inputs.parameters.results_dir}}/Resulting_Filenames.txt"
 
  - name: split-buildings-template
    inputs:
      parameters:
      # Absolute file path
      - name: input_filename
      # Absolute directory path 
      - name: output_dir
      # Filename (relative to output_dir)
      - name: output_filename
      - name: persistedVolume
    container:
      image: vcity/3duse
      imagePullPolicy: Never
      workingDir: /root/3DUSE/Build/src/utils/cmdline/
      args: ["splitCityGMLBuildings",
            "--input-file",  "{{inputs.parameters.persistedVolume}}{{inputs.parameters.input_filename}}",
            "--output-file", "{{inputs.parameters.output_filename}}",
            "--output-dir",  "{{inputs.parameters.persistedVolume}}{{inputs.parameters.output_dir}}"]
      volumeMounts:
        - name: workdir
          mountPath: "{{inputs.parameters.persistedVolume}}"
    outputs:
      parameters:
      - name: resulting-filenames
        value: "{{inputs.parameters.output_dir}}/{{inputs.parameters.output_filename}}"

  - name: strip-gml-template
    inputs:
      parameters:
      # Absolute file path
      - name: input_filename
      # Absolute directory path 
      - name: output_dir
      # Filename (relative to output_dir)
      - name: output_filename
      - name: persistedVolume
    container:
      image: vcity/citygml2stripper
      imagePullPolicy: Never
      # workingDir: is not necessary in this case
      args: ["--input",      "{{inputs.parameters.persistedVolume}}{{inputs.parameters.input_filename}}",
             "--output",     "{{inputs.parameters.output_filename}}",
             "--output-dir", "{{inputs.parameters.persistedVolume}}{{inputs.parameters.output_dir}}"]
      volumeMounts:
        - name: workdir
          mountPath: "{{inputs.parameters.persistedVolume}}"
    outputs:
      parameters:
      - name: resulting-filenames
        value: "{{inputs.parameters.output_dir}}/{{inputs.parameters.output_filename}}"

  - name: 3dcitydb-daemon
    daemon: true                        # start 3dcitydb as a daemon
    retryStrategy:
      limit: 10                         # retry container if it fails
    inputs:
      parameters:
      - name: persistedVolume
      - name: database_name
      - name: password
      - name: user
    container:
      image: tumgis/3dcitydb-postgis:v4.0.2
      # Reference: https://3dcitydb-docs.readthedocs.io/en/latest/3dcitydb/docker.html#
      imagePullPolicy: IfNotPresent
      env:
        - name: CITYDBNAME
          value: "{{inputs.parameters.database_name}}"
        - name: POSTGRES_PASSWORD
          value: "{{inputs.parameters.password}}"
        - name: POSTGRES_USER
          value: "{{inputs.parameters.user}}"
        # Hardwired parameters FIXME
        # Notice that, in this particular case, this is a particulary lame
        # practice because the following "knowledge" was manually extracted 
        # from a specific set of data and manually burned in this workflow. 
        # Change the input data and the workflow will fail when trying to
        # import data to the DB
        - name: SRID
          value: '3946'
        - name: SRSNAME
          value: 'espg:3946'    
      volumeMounts:
        - name: workdir
          mountPath: "{{inputs.parameters.persistedVolume}}"   
      readinessProbe:                   # wait for readinessProbe to succeed
        # References:
        # - https://argoproj.github.io/argo-workflows/fields/#probe
        # - https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        # - https://github.com/bitnami/charts/issues/2682 (for inspiration)
        exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432